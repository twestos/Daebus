# This workflow will upload a Python Package when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

name: Upload Python Package

on:
  workflow_run:
    workflows: ["Run Tests"]
    branches: [main]
    types: [completed]

permissions:
  contents: read

jobs:
  check_version:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    outputs:
      version_changed: ${{ steps.check_version.outputs.version_changed }}
      version: ${{ steps.check_version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check if version changed
        id: check_version
        run: |
          # Get current version
          CURRENT_VERSION=$(grep -m 1 "version = " pyproject.toml | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')
          echo "Current version: $CURRENT_VERSION"
          
          # Check if version changed in this commit
          git fetch origin main
          PREV_VERSION=$(git show origin/main:pyproject.toml | grep -m 1 "version = " | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')
          echo "Previous version: $PREV_VERSION"
          
          if [ "$CURRENT_VERSION" != "$PREV_VERSION" ]; then
            echo "Version changed from $PREV_VERSION to $CURRENT_VERSION"
            echo "version_changed=true" >> $GITHUB_OUTPUT
            echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          else
            echo "Version unchanged"
            echo "version_changed=false" >> $GITHUB_OUTPUT
          fi

  deploy:
    needs: check_version
    if: ${{ needs.check_version.outputs.version_changed == 'true' }}
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    - name: Build package
      run: python -m build
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }} 